@model FriendVM
@{ AppUser user = await _userManager.GetUserAsync(User);}

@{
    ViewData["Title"] = "Friends";
    Layout = "~/Views/Shared/_AccountPageLayout.cshtml";
}

<!-- profile section starts -->
@await Component.InvokeAsync("_Profile", Model.MainUser.Id)
<!-- profile section ends -->

<!-- friends section starts -->
    <section id="userFriends">
        @if (Model.Friends.Count() == 0)
        {
            if (Model.MainUser == user)
            {
                <div id="noFriend">
                    <p>Your friends list is empty!</p>
                </div>
            }
            else
            {
                <div id="noFriend">
                    <p><strong>@Model.MainUser.Name @Model.MainUser.Surname</strong>'s friends list is empty!</p>
                </div>
            }
        }
        else
        {
            <div>
                @foreach (AppUser friend in Model.FriendUsers)
                {
                    <div class="friend">
                        <div>
                            <div>
                                @if (!(Model.Photos.Any(p => p.user == friend && p.isCoverPhoto == true)))
                                {
                                    <p>Cover Photo</p>
                                }
                                else
                                {
                                    foreach (Photo photo in Model.Photos.Where(p => p.user == friend && p.isCoverPhoto == true).TakeLast(1))
                                    {
                                        <a href="#"> <img src="~/img/@photo.Link" alt="profile photo"> </a>
                                    }
                                }
                            </div>
                            <div>
                                @if (!(Model.Photos.Any(p => p.user == friend && p.isProfilePhoto == true)))
                                {
                                    <p>Profile<br>Photo</p>
                                }
                                else
                                {
                                    foreach (Photo photo in Model.Photos.Where(p => p.user == friend && p.isProfilePhoto == true).TakeLast(1))
                                    {
                                        <a href="#"> <img src="~/img/@photo.Link" alt="cover photo" /> </a>
                                    }
                                }
                            </div>
                        </div>
                        <div>
                            <ul>
                                <li>
                                    <a asp-controller="Account" asp-action="Timeline" asp-route-id="@friend.Id">@friend.Name @friend.Surname</a>
                                </li>
                                <li id="friendOptions">
                                    <a href="#"> <i class="fas fa-ellipsis-h"></i> </a>
                                    <ul>
                                        <li> <a href="#">Unfriend</a> </li>
                                        <li> <a href="#">Block</a> </li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </div>
                }
            </div>
        }
    </section>
<!-- friends section ends -->

@await  Html.PartialAsync("_MessageBoxPartial", Model.MainUser)

@await  Html.PartialAsync("_PhotoPartial")

@await  Html.PartialAsync("_ProfilePhotoPartial")

@await  Html.PartialAsync("_CoverPhotoPartial")